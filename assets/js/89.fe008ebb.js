(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{395:function(s,t,a){"use strict";a.r(t);var n=a(6),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/snap/20220408172602.png",alt:"img"}})]),s._v(" "),t("h2",{attrs:{id:"数据类型分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据类型分类"}},[s._v("#")]),s._v(" 数据类型分类")]),s._v(" "),t("p",[s._v("Java中的数据类型有两类：")]),s._v(" "),t("ul",[t("li",[s._v("值类型（又叫内置数据类型，基本数据类型）")]),s._v(" "),t("li",[s._v("引用类型（除值类型以外，都是引用类型，包括"),t("code",[s._v("String")]),s._v("、数组）")])]),s._v(" "),t("h3",{attrs:{id:"值类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#值类型"}},[s._v("#")]),s._v(" 值类型")]),s._v(" "),t("p",[s._v("Java语言提供了8中基本类型，大致分为4类")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("基本数据类型")]),s._v(" "),t("th",[s._v("分类")]),s._v(" "),t("th",[s._v("比特数")]),s._v(" "),t("th",[s._v("默认值")]),s._v(" "),t("th",[s._v("取值范围")]),s._v(" "),t("th",[s._v("说明")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[t("code",[s._v("boolean")])]),s._v(" "),t("td",[t("strong",[s._v("布尔型")])]),s._v(" "),t("td",[s._v("8位")]),s._v(" "),t("td",[t("code",[s._v("false")])]),s._v(" "),t("td",[s._v("{false, true}")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[t("code",[s._v("char")])]),s._v(" "),t("td",[t("strong",[s._v("字符型")])]),s._v(" "),t("td",[s._v("16位")]),s._v(" "),t("td",[t("code",[s._v("\\u0000")])]),s._v(" "),t("td",[s._v("[0, $2^{16} - 1$]")]),s._v(" "),t("td",[s._v("存储 Unicode 码，用单引号赋值")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("byte")])]),s._v(" "),t("td",[t("strong",[s._v("整数型")])]),s._v(" "),t("td",[s._v("8位")]),s._v(" "),t("td",[t("code",[s._v("0")])]),s._v(" "),t("td",[s._v("[-$2^7$, $2^7 - 1$]")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[t("code",[s._v("short")])]),s._v(" "),t("td",[t("strong",[s._v("整数型")])]),s._v(" "),t("td",[s._v("16位")]),s._v(" "),t("td",[t("code",[s._v("0")])]),s._v(" "),t("td",[s._v("[-$2^{15}$, $2^{15} - 1$]")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[t("code",[s._v("int")])]),s._v(" "),t("td",[t("strong",[s._v("整数型")])]),s._v(" "),t("td",[s._v("32位")]),s._v(" "),t("td",[t("code",[s._v("0")])]),s._v(" "),t("td",[s._v("[-$2^{31}$, $2^{31} - 1$]")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[t("code",[s._v("long")])]),s._v(" "),t("td",[t("strong",[s._v("整数型")])]),s._v(" "),t("td",[s._v("64位")]),s._v(" "),t("td",[t("code",[s._v("0L")])]),s._v(" "),t("td",[s._v("[-$2^{63}$, $2^{63} - 1$]")]),s._v(" "),t("td",[s._v("赋值时一般在数字后加上 "),t("code",[s._v("l")]),s._v(" 或 "),t("code",[s._v("L")])])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("float")])]),s._v(" "),t("td",[t("strong",[s._v("浮点型")])]),s._v(" "),t("td",[s._v("32位")]),s._v(" "),t("td",[t("code",[s._v("+0.0F")])]),s._v(" "),t("td",[s._v("[$2^{-149}$, $2^{128} - 1$]")]),s._v(" "),t("td",[s._v("赋值时必须在数字后加上 "),t("code",[s._v("f")]),s._v(" 或 "),t("code",[s._v("F")])])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("double")])]),s._v(" "),t("td",[t("strong",[s._v("浮点型")])]),s._v(" "),t("td",[s._v("64位")]),s._v(" "),t("td",[t("code",[s._v("+0.0D")])]),s._v(" "),t("td",[s._v("[$2^{-1074}$, $2^{1024} - 1$]")]),s._v(" "),t("td",[s._v("赋值时一般在数字后加 "),t("code",[s._v("d")]),s._v(" 或 "),t("code",[s._v("D")])])])])]),s._v(" "),t("p",[s._v("尽管各种数据类型的默认值看起来不一样，但在内存中都是 0。")]),s._v(" "),t("p",[s._v("在这些基本类型中，"),t("code",[s._v("boolean")]),s._v(" 和 "),t("code",[s._v("char")]),s._v(" 是唯二的无符号类型")]),s._v(" "),t("h3",{attrs:{id:"值类型和引用类型的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#值类型和引用类型的区别"}},[s._v("#")]),s._v(" 值类型和引用类型的区别")]),s._v(" "),t("ul",[t("li",[s._v("从概念方面来说\n"),t("ul",[t("li",[s._v("基本类型：变量名指向具体的数值")]),s._v(" "),t("li",[s._v("引用类型：变量名指向存数据对象的内存地址")])])]),s._v(" "),t("li",[s._v("从内存方面来说\n"),t("ul",[t("li",[s._v("基本类型:变量在声明之后，Java就会立刻分配给他内存空间")]),s._v(" "),t("li",[s._v("引用类型：它以特殊的方式（类似于C指针）向对象实体（具体的值），这类变量声明时不会分配内存，只是存储了一个内存地址。")])])]),s._v(" "),t("li",[s._v("从使用方面来说\n"),t("ul",[t("li",[s._v("基本类型：使用时需要赋具体值，判断时使用"),t("code",[s._v("==")]),s._v("号。")]),s._v(" "),t("li",[s._v("引用类型：使用时可以赋null，判断时使用"),t("code",[s._v("equals")]),s._v("方法。")])])])]),s._v(" "),t("blockquote",[t("p",[s._v("👉 扩展阅读："),t("a",{attrs:{href:"https://juejin.im/post/59cd71835188255d3448faf6",target:"_blank",rel:"noopener noreferrer"}},[s._v("Java 基本数据类型和引用类型(opens new window)"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("这篇文章对于基本数据类型和引用类型的内存存储讲述比较生动。")])]),s._v(" "),t("h2",{attrs:{id:"数据转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据转换"}},[s._v("#")]),s._v(" 数据转换")]),s._v(" "),t("p",[s._v("Java中，数据类型转换有两种方式：")]),s._v(" "),t("ul",[t("li",[s._v("自动转换")]),s._v(" "),t("li",[s._v("强制转换")])]),s._v(" "),t("h3",{attrs:{id:"自动转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自动转换"}},[s._v("#")]),s._v(" 自动转换")]),s._v(" "),t("p",[s._v("一般情况下，定义了某数据类型的变量，就不能再随意转换。但是JAVA允许用户对基本数据类型做"),t("strong",[s._v("有限度")]),s._v("的类型转换。")]),s._v(" "),t("p",[s._v("如果符合以下条件，则JAVA将会自动做类型转换：")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("由小数据转换为大数据")])]),s._v(" "),t("p",[s._v('显而易见的是，"小"数据类型的数值表示范围小于"大"数据类型的数值表示范围，即精度小于"大"数据类型。')]),s._v(" "),t("p",[s._v('所以，如果"大"数据向"小"数据转化怒，会丢失数据精度。比如：long转为int，则超出int表示范围的数据将会丢失，导致结果的不确定性。')]),s._v(" "),t("p",[s._v('反之，"小"数据向"大"数据转换，则不会存在数据丢失情况。由于这种原因，这种类型转换也称为'),t("strong",[s._v("扩大转换")]),s._v("。")]),s._v(" "),t("p",[s._v('这些类型由"小"到"大"分别为（byte，short，char）< int < long < float < double。')]),s._v(" "),t("p",[s._v('这里我们所说的"大"与"小"，并不是指占用字节的多少，而是指标示值的范围的大小。')])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("转换前后的数据类型要兼容")])]),s._v(" "),t("p",[s._v("由于boolean类型只能存放true或false，这与整合或字符不兼容，因此不可以做类型转换。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("整形类型和浮点型进行计算后，结果会转为浮点类型")])]),s._v(" "),t("p",[s._v("示例：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("float")]),s._v(" y "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("14.3f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"x/y = "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("y"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("输出：")]),s._v(" "),t("div",{staticClass:"language-tex line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-tex"}},[t("code",[s._v("x/y = 1.9607843\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("可见long虽然精度大于float类型，但是结果为浮点数类型。")])])]),s._v(" "),t("h3",{attrs:{id:"强制转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强制转换"}},[s._v("#")]),s._v(" 强制转换")]),s._v(" "),t("p",[s._v("在不符合自动转换条件时或者根据用户的需要，可以对数据类型做强制的转换。")]),s._v(" "),t("p",[t("strong",[s._v("强制转换使用括号"),t("code",[s._v("（）")])]),s._v("。")]),s._v(" "),t("p",[s._v("引用类型也可以使用强制转换，")]),s._v(" "),t("p",[s._v("示例：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("float")]),s._v(" f "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("25.5f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("f"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"x = "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("输出：")]),s._v(" "),t("div",{staticClass:"language-tex line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-tex"}},[t("code",[s._v("x = 25\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"装箱和拆箱"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#装箱和拆箱"}},[s._v("#")]),s._v(" 装箱和拆箱")]),s._v(" "),t("h3",{attrs:{id:"包装类、装箱、拆箱"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#包装类、装箱、拆箱"}},[s._v("#")]),s._v(" 包装类、装箱、拆箱")]),s._v(" "),t("p",[s._v("Java中为每一个基本数据类型提供了相应的包装类，如下：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Byte")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Short")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Float")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("float")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Double")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Character")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[t("strong",[s._v("引入包装类的目的")]),s._v("就是：提供一种机制，使得"),t("strong",[s._v("基本数据类型可以与引用类型互相转换。")])]),s._v(" "),t("p",[s._v("基本数据类型与包装类的转换被称为"),t("code",[s._v("装箱")]),s._v("和"),t("code",[s._v("拆箱")]),s._v("。")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("装箱")]),t("strong",[s._v("（boxing）是将值类型转换为引用类型")]),s._v("。例如："),t("code",[s._v("int")]),s._v("转"),t("code",[s._v("Integer")]),s._v(" "),t("ul",[t("li",[s._v("装箱过程是调用包装类的"),t("code",[s._v("valueOf")]),s._v("方法实现的。")])])]),s._v(" "),t("li",[t("code",[s._v("拆箱")]),t("strong",[s._v("（unboxing）是将引用类型转换为值类型")]),s._v("。例如："),t("code",[s._v("Integer")]),s._v("转"),t("code",[s._v("int")]),s._v(" "),t("ul",[t("li",[s._v("拆箱过程是通过调用包装类的"),t("code",[s._v("xxxValue")]),s._v("方法实现的。（xxx代表对应的基本数据类型）。")])])])]),s._v(" "),t("h3",{attrs:{id:"自动装箱、自动拆箱"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自动装箱、自动拆箱"}},[s._v("#")]),s._v(" 自动装箱、自动拆箱")]),s._v(" "),t("p",[s._v("基本数据（Primitive）型的自动装箱（boxing）拆箱（unboxing）自 JDK 5 开始提供的功能。")]),s._v(" "),t("p",[s._v("自动装箱与拆箱的机制可以让我们在 Java 的变量赋值或者是方法调用等情况下使用原始类型或者对象类型更加简单直接。 因为自动装箱会隐式地创建对象，如果在一个循环体中，会创建无用的中间对象，这样会增加 GC 压力，拉低程序的性能。所以在写循环时一定要注意代码，避免引入不必要的自动装箱操作。")]),s._v(" "),t("p",[s._v("JDK 5 之前的形式：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" i1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 非自动装箱")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("JDK 5 之后：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" i2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 自动装箱")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("Java 对于自动装箱和拆箱的设计，依赖于一种叫做享元模式的设计模式（有兴趣的朋友可以去了解一下源码，这里不对设计模式展开详述）。")]),s._v(" "),t("blockquote",[t("p",[s._v("👉 扩展阅读："),t("a",{attrs:{href:"https://www.cnblogs.com/dolphin0520/p/3780005.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("深入剖析 Java 中的装箱和拆箱(opens new window)"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("结合示例，一步步阐述装箱和拆箱原理。")])]),s._v(" "),t("h3",{attrs:{id:"装箱、拆箱的应用和注意点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#装箱、拆箱的应用和注意点"}},[s._v("#")]),s._v(" 装箱、拆箱的应用和注意点")]),s._v(" "),t("h4",{attrs:{id:"装箱、拆箱应用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#装箱、拆箱应用场景"}},[s._v("#")]),s._v(" 装箱、拆箱应用场景")]),s._v(" "),t("ul",[t("li",[s._v("一种最普通的场景是：调用一个"),t("strong",[s._v("含类型为 "),t("code",[s._v("Object")]),s._v(" 参数的方法")]),s._v("，该 "),t("code",[s._v("Object")]),s._v(" 可支持任意类型（因为 "),t("code",[s._v("Object")]),s._v(" 是所有类的父类），以便通用。当你需要将一个值类型（如 int）传入时，需要使用 "),t("code",[s._v("Integer")]),s._v(" 装箱。")]),s._v(" "),t("li",[s._v("另一种用法是：一个"),t("strong",[s._v("非泛型的容器")]),s._v("，同样是为了保证通用，而将元素类型定义为 "),t("code",[s._v("Object")]),s._v("。于是，要将值类型数据加入容器时，需要装箱。")]),s._v(" "),t("li",[s._v("当 "),t("code",[s._v("==")]),s._v(" 运算符的两个操作，一个操作数是包装类，另一个操作数是表达式（即包含算术运算）则比较的是数值（即会触发自动拆箱的过程）。")])]),s._v(" "),t("p",[s._v("【示例】装箱、拆箱示例")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" i1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 自动装箱")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" i2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 非自动装箱")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" i3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("valueOf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 非自动装箱")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i4 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 自动拆箱")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i5 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("intValue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 非自动拆箱")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"i1 = ["')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" i1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"]"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"i2 = ["')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" i2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"]"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"i3 = ["')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" i3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"]"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"i4 = ["')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" i4 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"]"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"i5 = ["')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" i5 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"]"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"i1 == i2 is ["')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" i2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"]"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"i1 == i4 is ["')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" i4"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"]"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 自动拆箱")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("输出：")]),s._v(" "),t("p",[t("img",{attrs:{src:"D:%5CTypora-Image%5Cimage-20220925110307051.png",alt:"image-20220925110307051"}})]),s._v(" "),t("p",[s._v("【说明】")]),s._v(" "),t("p",[s._v("上面的例子，虽然简单，但却隐藏了自动装箱、拆箱和非自动装箱、拆箱的应用。从例子中可以看到，明明所有变量都初始化为数值 10 了，但为何会出现 "),t("code",[s._v("i1 == i2 is [false")]),s._v(" 而 "),t("code",[s._v("i1 == i4 is [true]")]),s._v(" ？")]),s._v(" "),t("p",[s._v("原因在于：")]),s._v(" "),t("ul",[t("li",[s._v("i1、i2 都是包装类，使用 "),t("code",[s._v("==")]),s._v(" 时，Java 将它们当做两个对象，而非两个 int 值来比较，所以两个对象自然是不相等的。正确的比较操作应该使用 "),t("code",[s._v("equals")]),s._v(" 方法。")]),s._v(" "),t("li",[s._v("i1 是包装类，i4 是基础数据类型，使用 "),t("code",[s._v("==")]),s._v(" 时，Java 会将两个 i1 这个包装类对象自动拆箱为一个 "),t("code",[s._v("int")]),s._v(" 值，再代入到 "),t("code",[s._v("==")]),s._v(" 运算表达式中计算；最终，相当于两个 "),t("code",[s._v("int")]),s._v(" 进行比较，由于值相同，所以结果相等。")])]),s._v(" "),t("p",[s._v("【示例】包装类判等问题")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Integer.valueOf(127)")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Integer.valueOf(127)")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Integer.valueOf(128)")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" d "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Integer.valueOf(128)")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//false")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//设置-XX:AutoBoxCacheMax=1000再试试")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" e "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Integer.valueOf(127)")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" f "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//new instance")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" f"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//false")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" g "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//new instance")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" h "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//new instance")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("g "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//false")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//unbox")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" j "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" j"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//true")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);