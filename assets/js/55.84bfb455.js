(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{374:function(t,_,a){"use strict";a.r(_);var v=a(6),s=Object(v.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("blockquote",[_("p",[t._v("本文主要介绍 MyBatis-Plus的基于字段隔离的多租户实现，以及MyBatis-Plus的基于字段的隔离方式实践和原理。")])]),t._v(" "),_("h2",{attrs:{id:"知识准备"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#知识准备"}},[t._v("#")]),t._v(" 知识准备")]),t._v(" "),_("blockquote",[_("p",[t._v("需要了解多租户及常见的实现方式，以及MyBatis-Plus的基于字段的隔离方式原理。")])]),t._v(" "),_("h3",{attrs:{id:"什么是多租户"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是多租户"}},[t._v("#")]),t._v(" 什么是多租户？")]),t._v(" "),_("blockquote",[_("p",[t._v("如下解释来源于百度百科")])]),t._v(" "),_("p",[t._v("      多租户技术（英语：multi-tenancy technology）或称多重租赁技术，是一种软件架构技术，它是在探讨与实现如何于多用户的环境下共用相同的系统或程序组件，并且仍可确保各用户间数据的隔离性。")]),t._v(" "),_("p",[t._v("      多租户简单来说是指一个单独的实例可以为多个组织服务。多租户技术为共用的数据中心内如何以单一系统架构与服务提供多数客户端相同甚至可定制化的服务，并且仍然可以保障客户的数据隔离。一个支持多租户技术的系统需要在设计上对它的数据和配置进行虚拟分区，从而使系统的每个租户或称组织都能够使用一个单独的系统实例，并且每个租户都可以根据自己的需求对租用的系统实例进行个性化配置。")]),t._v(" "),_("p",[t._v("      多租户技术可以实现多个租户之间共享系统实例，同时又可以实现租户的系统实例的个性化定制。通过使用多租户技术可以保证系统共性的部分被共享，个性的部分被单独隔离。通过在多个租户之间的资源复用，运营管理维护资源，有效节省开发应用的成本。而且，在租户之间共享应用程序的单个实例，可以实现当应用程序升级时，所有租户可以同时升级。同时，因为多个租户共享一份系统的核心代码，因此当系统升级时，只需要升级相同的核心代码即可。")]),t._v(" "),_("h3",{attrs:{id:"多租户在数据存储上有哪些实现方式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#多租户在数据存储上有哪些实现方式"}},[t._v("#")]),t._v(" 多租户在数据存储上有哪些实现方式？")]),t._v(" "),_("p",[t._v("多租户在数据存储上存在三种主要的方案，分别是")]),t._v(" "),_("h4",{attrs:{id:"db隔离-独立数据库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#db隔离-独立数据库"}},[t._v("#")]),t._v(" DB隔离：独立数据库")]),t._v(" "),_("p",[t._v("这是第一种方案，即"),_("strong",[t._v("一个租户一个数据库")]),t._v("，这种方案的用户数据隔离级别最高，安全性最好，但成本也高。")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("优点")]),t._v("：")])]),t._v(" "),_("ol",[_("li",[t._v("为不同的租户提供独立的数据库，有助于简化数据模型的扩展设计，满足不同租户的独特需求；")]),t._v(" "),_("li",[t._v("如果出现故障，恢复数据比较简单。")])]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("缺点")]),t._v("：")])]),t._v(" "),_("ol",[_("li",[t._v("增大了数据库的安装数量，随之带来维护成本和购置成本的增加。")]),t._v(" "),_("li",[t._v("这种方案与传统的一个客户、一套数据、一套部署类似，差别只在于软件统一部署在运营商那里。如果面对的是银行、医院等需要非常高数据隔离级别的租户，可以选择这种模式，提高租用的定价。如果定价较低，产品走低价路线，这种方案一般对运营商来说是无法承受的。")])]),t._v(" "),_("h4",{attrs:{id:"schema隔离-共享数据库-隔离数据架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#schema隔离-共享数据库-隔离数据架构"}},[t._v("#")]),t._v(" Schema隔离：共享数据库，隔离数据架构")]),t._v(" "),_("p",[t._v("这是第二种方案，即多个或所有租户共享Database，但"),_("strong",[t._v("一个租户（Tenant）一个Schema")]),t._v("。")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("优点")]),t._v("：")])]),t._v(" "),_("ol",[_("li",[t._v("为安全性要求较高的租户提供了一定程度的逻辑数据隔离，并不是完全隔离；每个数据库可以支持更多的租户数量。")])]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("缺点")]),t._v("：")])]),t._v(" "),_("ol",[_("li",[t._v("如果出现故障，数据恢复比较困难，因为恢复数据库将牵扯到其他租户的数据；")]),t._v(" "),_("li",[t._v("如果需要跨租户统计数据，存在一定困难。")])]),t._v(" "),_("h4",{attrs:{id:"字段隔离-共享数据库-共享数据架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字段隔离-共享数据库-共享数据架构"}},[t._v("#")]),t._v(" 字段隔离：共享数据库，共享数据架构")]),t._v(" "),_("p",[t._v("这是第三种方案，即租户共享同一个Database、同一个Schema，但在表中"),_("strong",[t._v("通过TenantID区分租户的数据")]),t._v("。这是共享程度最高、隔离级别最低的模式。")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("优点")]),t._v("：")])]),t._v(" "),_("ol",[_("li",[t._v("三种方案比较，第三种方案的维护和购置成本最低，允许每个数据库支持的租户数量最多。")])]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("缺点")]),t._v("：")])]),t._v(" "),_("ol",[_("li",[t._v("隔离级别最低，安全性最低，需要在设计开发时加大对安全的开发量；")]),t._v(" "),_("li",[t._v("数据备份和恢复最困难，需要逐表逐条备份和还原。")]),t._v(" "),_("li",[t._v("如果希望以最少的服务器为最多的租户提供服务，并且租户接受以牺牲隔离级别换取降低成本，这种方案最适合。")])]),t._v(" "),_("h3",{attrs:{id:"mybatis-plus的基于字段的隔离方式原理是什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#mybatis-plus的基于字段的隔离方式原理是什么"}},[t._v("#")]),t._v(" MyBatis-Plus的基于字段的隔离方式原理是什么？")]),t._v(" "),_("p",[t._v("这里请看MyBatis的插件机制："),_("a",{attrs:{href:""}},[t._v("MyBatis详解 - 插件机制")])]),t._v(" "),_("h2",{attrs:{id:"简单示例"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#简单示例"}},[t._v("#")]),t._v(" 简单示例")]),t._v(" "),_("blockquote",[_("p",[t._v("这里沿用之前的test_db，在表中添加tenant_id，并命名为新的schema test_db_tenant。")])]),t._v(" "),_("h3",{attrs:{id:""}},[_("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])])])}),[],!1,null,null,null);_.default=s.exports}}]);