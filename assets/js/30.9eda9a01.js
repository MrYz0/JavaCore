(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{345:function(t,r,a){"use strict";a.r(r);var o=a(6),i=Object(o.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("ul",[r("li",[t._v("♥SpringBoot 知识体系详解♥\n"),r("ul",[r("li",[t._v("相关文章\n"),r("ul",[r("li",[r("a",{attrs:{href:"#springboot%E5%85%A5%E9%97%A8-helloworld-banner-logback-%E5%88%86%E5%B1%82%E8%AE%BE%E8%AE%A1"}},[t._v("SpringBoot入门(helloworld,banner,logback,分层设计)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#springboot%E6%8E%A5%E5%8F%A3%E8%AE%BE%E8%AE%A1%E5%92%8C%E5%AE%9E%E7%8E%B0-%E5%B0%81%E8%A3%85-%E6%A0%A1%E9%AA%8C-%E5%BC%82%E5%B8%B8-%E5%8A%A0%E5%AF%86-%E5%B9%82%E7%AD%89"}},[t._v("SpringBoot接口设计和实现(封装,校验,异常,加密,幂等)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90%E6%95%B0%E6%8D%AE%E5%BA%93jpa-mybatis-mybatis-plus"}},[t._v("SpringBoot集成数据库(JPA,MyBatis,MyBatis-Plus)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90shardingjdbc-%E5%88%86%E8%A1%A8%E5%88%86%E5%BA%93-%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB-%E5%A4%9A%E7%A7%9F%E6%88%B7"}},[t._v("SpringBoot集成ShardingJDBC(分表分库,读写分离,多租户)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90%E8%BF%9E%E6%8E%A5%E6%B1%A0-hikaricp-druid"}},[t._v("SpringBoot集成连接池(HikariCP,Druid)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB-liquibase-flyway"}},[t._v("SpringBoot集成数据迁移(Liquibase,Flyway)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90postgresql-jpa-mybatis-plus-json"}},[t._v("SpringBoot集成PostgreSQL(JPA,MyBatis-Plus,Json)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90redis-jedis-luttue-redission"}},[t._v("SpringBoot集成Redis(Jedis,Luttue,Redission)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90%E5%85%B6%E5%AE%83nosql%E6%95%B0%E6%8D%AE%E5%BA%93-mongodb-elasticsearch-noe4j"}},[t._v("SpringBoot集成其它NoSQL数据库(MongoDB,ElasticSearch,Noe4J)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90websocket-socket-netty"}},[t._v("SpringBoot集成Websocket(socket,netty)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-springtask-quartz-elastic-jobxxl-job"}},[t._v("SpringBoot集成定时任务(springtask,quartz,elastic-job,xxl-job)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90%E8%A7%86%E5%9B%BE%E8%A7%A3%E6%9E%90-thymeleaf-freemarker-velocity-jsp-vuejs"}},[t._v("SpringBoot集成视图解析(Thymeleaf,FreeMarker,Velocity,JSP,VueJS)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90%E7%BC%93%E5%AD%98-caffeine-ehcache-couchbase"}},[t._v("SpringBoot集成缓存(Caffeine,EhCache,CouchBase)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90%E8%AE%A4%E8%AF%81%E6%8E%88%E6%9D%83-springsecurity-shirooauth2-sa-token-keycloak"}},[t._v("SpringBoot集成认证授权(SpringSecurity,Shiro,Oauth2,SA-Token,Keycloak)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90%E6%96%87%E6%A1%A3%E6%93%8D%E4%BD%9C-%E4%B8%8A%E4%BC%A0-pdf-excel-word"}},[t._v("SpringBoot集成文档操作(上传,PDF,Excel,Word)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97-activemq-rabbitmq-zeromq-kafka"}},[t._v("SpringBoot集成消息队列(ActiveMQ,RabbitMQ,ZeroMQ,Kafka)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90%E9%80%9A%E7%9F%A5-email-%E7%9F%AD%E4%BF%A1-%E9%92%89%E9%92%89-%E5%BE%AE%E4%BF%A1"}},[t._v("SpringBoot集成通知(Email,短信,钉钉,微信)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F-minio-aliyun-tencentcloud-fastdfs"}},[t._v("SpringBoot集成文件系统(minIO,aliyun,tencentCloud,FastDFS)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90%E5%B7%A5%E4%BD%9C%E6%B5%81%E5%BC%95%E6%93%8E-activi-jbpm-flowable"}},[t._v("SpringBoot集成工作流引擎(activi,jBPM,flowable)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90%E5%85%B6%E5%AE%83%E5%8A%9F%E8%83%BD-%E6%94%AF%E4%BB%98-opc-ua-javafx2"}},[t._v("SpringBoot集成其它功能(支付,OPC-UA,JavaFX2)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#springboot%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2-jar-war-linux-docker-docker-compose"}},[t._v("SpringBoot应用部署(jar,war,linux,docker,docker-compose)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90%E7%9B%91%E6%8E%A7-acturator-springboot-admin-elk-grafan-aapm"}},[t._v("SpringBoot集成监控(acturator,springboot-admin,ELK,Grafana,APM)")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#springboot%E8%BF%9B%E9%98%B6starter%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D%E5%8E%9F%E7%90%86%E5%90%84%E7%B1%BB%E6%9C%BA%E5%88%B6%E7%AD%89"}},[t._v("SpringBoot进阶(starter,自动装配原理,各类机制等)")])]),t._v(" "),r("li")])])])])]),t._v(" "),r("h3",{attrs:{id:"springboot入门-helloworld-banner-logback-分层设计"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot入门-helloworld-banner-logback-分层设计"}},[t._v("#")]),t._v(" SpringBoot入门(helloworld,banner,logback,分层设计)")]),t._v(" "),r("blockquote",[r("p",[t._v("首先，在开始SpringBoot开发时，我们了解一些技术栈背景并通过Hello World级别应用程序开始延伸出SpringBoot入门应用的开发。")])]),t._v(" "),r("ul",[r("li",[r("p",[r("a",{attrs:{href:"/JavaCore/pages/0950b1/"}},[t._v("SpringBoot入门 - SpringBoot 简介")])]),t._v(" "),r("ul",[r("li",[t._v("为什么有了SpringFramework还会诞生了SpringBoot?简单而言，因为虽然Spring的组件代码是轻量级的，但它的配置却是重量级的；所以SpringBoot的设计策略是通过"),r("span",{staticStyle:{color:"orange"}},[t._v("开箱即用和约定大于配置")]),t._v("来解决配置重的问题。")])])]),t._v(" "),r("li",[r("p",[r("a",{attrs:{href:"/JavaCore/pages/a43770/"}},[t._v("SpringBoot入门 - 创建第一个Hello World工程")])]),t._v(" "),r("ul",[r("li",[t._v("我们了解了SpringBoot和SpringFrameWork的关系之后，我们可以开始创建第一个Hello World级别的项目了。")])])]),t._v(" "),r("li",[r("p",[r("a",{attrs:{href:"/JavaCore/pages/dd2a5b/"}},[t._v("SpringBoot入门 - 对Hello World进行MVC分层")])]),t._v(" "),r("ul",[r("li",[t._v("上文我们创建一个简单的Hello World级别的web应用程序，但是存在一个问题，我们将所有的代码都放在一个类中，这显然是不合理的，name一个经典的CURD项目如何分包的？")])])]),t._v(" "),r("li",[r("p",[r("a",{attrs:{href:"/JavaCore/pages/2ba246/"}},[t._v("SpringBoot入门 - 添加内存数据库H2")])]),t._v(" "),r("ul",[r("li",[t._v("上文我们展示了通过学习经典的MVC分包结构展示了一个用户的增删改查项目，但是我们没有接入数据库；本文在上文的基础上，增加一个H2内存数据库，并且通过Spring提供的数据访问包JPA进行数据查询")])])]),t._v(" "),r("li",[r("p",[r("a",{attrs:{href:"/JavaCore/pages/2a2353/"}},[t._v("SpringBoot入门 - 定制自己的Banner")])]),t._v(" "),r("ul",[r("li",[t._v("我们在启动Spring Boot程序时，有SpringBoot的Banner信息，那么如何自定义成自己项目的信息呢？")])])]),t._v(" "),r("li",[r("p",[r("a",{attrs:{href:"/JavaCore/pages/84c402/"}},[t._v("SpringBoot入门 - 添加Logback日志")])]),t._v(" "),r("ul",[r("li",[t._v("SpringBoot开发中如何选用日志框架呢？ 出于性能等原因，Logback 目前是springboot应用日志的标配； 当然有时候在生产环境中也会考虑和三方中间件采用统一处理方式。")])])]),t._v(" "),r("li",[r("p",[r("a",{attrs:{href:"/JavaCore/pages/ba514c/"}},[t._v("SpringBoot入门 - 配置热部署devtools工具")])]),t._v(" "),r("ul",[r("li",[t._v("在SpringBoot开发调试中，如果我每行代码的修改都需要重启启动再调试，可能比较费时间；SpringBoot团队针对此问题提供了spring-boot-devtools（简称devtools）插件，它试图提升开发调试的效率。")])])]),t._v(" "),r("li",[r("p",[r("a",{attrs:{href:"/JavaCore/pages/4c3063/"}},[t._v("SpringBoot入门 - 开发中常用注解")])]),t._v(" "),r("ul",[r("li",[t._v("SpringBoot中常用的注解")])])])]),t._v(" "),r("h2",{attrs:{id:"springboot接口设计和实现-封装-校验-异常-加密-幂等"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot接口设计和实现-封装-校验-异常-加密-幂等"}},[t._v("#")]),t._v(" SpringBoot接口设计和实现(封装,校验,异常,加密,幂等)")]),t._v(" "),r("blockquote",[r("p",[t._v("接着， 站在接口设计和实现的角度，从实战开发中梳理出，关于接口开发的技术要点。")])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"/JavaCore/pages/4b305a/"}},[t._v("SpringBoot接口 - 如何统一接口封装")]),t._v(" "),r("ul",[r("li",[t._v("在以SpringBoot开发Restful接口时，统一返回方便前端进行开发和封装，以及出现时给出响应编码和信息。")])])]),t._v(" "),r("li",[r("a",{attrs:{href:"/JavaCore/pages/e14527/"}},[t._v("SpringBoot接口 - 如何对参数进行校验")]),t._v(" "),r("ul",[r("li",[t._v("在以SpringBoot开发Restful接口时, 对于接口的查询参数后台也是要进行校验的，同时还需要给出校验的返回信息放到上文我们统一封装的结构中。那么如何优雅的进行参数的统一校验呢？")])])]),t._v(" "),r("li",[r("a",{attrs:{href:"/JavaCore/pages/c80eaa/"}},[t._v("SpringBoot接口 - 如何统一异常处理")]),t._v(" "),r("ul",[r("li",[t._v("SpringBoot接口如何对异常进行统一封装，并统一返回呢？以上文的参数校验为例，如何优雅的将参数校验的错误信息统一处理并封装返回呢？")])])]),t._v(" "),r("li",[r("a",{attrs:{href:"/JavaCore/pages/ffbfa6/"}},[t._v("SpringBoot接口 - 如何提供多个版本接口")]),t._v(" "),r("ul",[r("li",[t._v("在以SpringBoot开发Restful接口时，由于模块，系统等业务的变化，需要对同一接口提供不同版本的参数实现（老的接口还有模块或者系统在用，不能直接改，所以需要不同版本）。如何更加优雅的实现多版本接口呢？")])])]),t._v(" "),r("li",[r("a",{attrs:{href:"/JavaCore/pages/298cc1/"}},[t._v("SpringBoot接口 - 如何生成接口文档之Swagger技术栈")]),t._v(" "),r("ul",[r("li",[t._v("SpringBoot开发Restful接口，有什么API规范吗？如何快速生成API文档呢？Swagger 是一个用于生成、描述和调用 RESTful 接口的 Web 服务。通俗的来讲，Swagger 就是将项目中所有（想要暴露的）接口展现在页面上，并且可以进行接口调用和测试的服务。本文主要介绍OpenAPI规范，以及Swagger技术栈基于OpenAPI规范的集成方案。")])])]),t._v(" "),r("li",[r("a",{attrs:{href:"/JavaCore/pages/21cc67/"}},[t._v("SpringBoot接口 - 如何访问外部接口")]),t._v(" "),r("ul",[r("li",[t._v("在SpringBoot接口开发中，存在着本模块的代码需要访问外面模块接口或外部url链接的需求, 比如调用外部的地图API或者天气API。那么有哪些方式可以调用外部接口呢？")])])]),t._v(" "),r("li",[r("a",{attrs:{href:"/JavaCore/pages/4c3063/"}},[t._v("SpringBoot接口 - 如何对接口进行加密")]),t._v(" "),r("ul",[r("li",[t._v("在以SpringBoot开发后台API接口时，会存在哪些接口不安全的因素呢？通常如何去解决的呢？本文主要介绍API"),r("strong",[t._v("接口有不安全的因素")]),t._v("以及"),r("strong",[t._v("常见的保证接口安全的方式")]),t._v("，重点"),r("strong",[t._v("实践如何对接口进行签名")]),t._v("。")])])]),t._v(" "),r("li",[r("a",{attrs:{href:"/JavaCore/pages/5029eb/"}},[t._v("SpringBoot接口 - 如何保证接口幂等")]),t._v(" "),r("ul",[r("li",[t._v("在以SpringBoot开发Restful接口时，如何防止接口的重复提交呢？ 本文主要介绍接口幂等相关的知识点，并实践常见基于Token实现接口幂等。")])])]),t._v(" "),r("li",[r("a",{attrs:{href:"/JavaCore/pages/4c3063/"}},[t._v("SpringBoot接口 - 如何实现接口限流之单实例")]),t._v(" "),r("ul",[r("li",[t._v("在以SpringBoot开发Restful接口时，当流量超过服务极限能力时，系统可能会出现卡死、崩溃的情况，所以就有了降级和限流。在接口层如何做限流呢？ 本文主要回顾限流的知识点，并实践单实例限流的一种思路。")])])]),t._v(" "),r("li",[r("a",{attrs:{href:"/JavaCore/pages/4c3063/"}},[t._v("SpringBoot接口 - 如何实现接口限流之分布式")]),t._v(" "),r("ul",[r("li",[t._v("上文中介绍了单实例下如何在业务接口层做限流，本文主要介绍分布式场景下限流的方案，以及什么样的分布式场景下需要在业务层加限流而不是接入层; 并且结合kailing开源的"),r("a",{attrs:{href:"https://gitee.com/kailing/ratelimiter-spring-boot-starter",target:"_blank",rel:"noopener noreferrer"}},[t._v("ratelimiter-spring-boot-starter  (opens new window)"),r("OutboundLink")],1),t._v("为例， 学习"),r("strong",[t._v("思路+代码封装+starter封装")]),t._v("。")])])])]),t._v(" "),r("h2",{attrs:{id:"springboot集成数据库-jpa-mybatis-mybatis-plus"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成数据库-jpa-mybatis-mybatis-plus"}},[t._v("#")]),t._v(" SpringBoot集成数据库(JPA,MyBatis,MyBatis-Plus)")]),t._v(" "),r("p",[t._v("aa")]),t._v(" "),r("h2",{attrs:{id:"springboot集成shardingjdbc-分表分库-读写分离-多租户"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成shardingjdbc-分表分库-读写分离-多租户"}},[t._v("#")]),t._v(" SpringBoot集成ShardingJDBC(分表分库,读写分离,多租户)")]),t._v(" "),r("p",[t._v("aa")]),t._v(" "),r("h2",{attrs:{id:"springboot集成连接池-hikaricp-druid"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成连接池-hikaricp-druid"}},[t._v("#")]),t._v(" SpringBoot集成连接池(HikariCP,Druid)")]),t._v(" "),r("p",[t._v("aa")]),t._v(" "),r("h2",{attrs:{id:"springboot集成数据迁移-liquibase-flyway"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成数据迁移-liquibase-flyway"}},[t._v("#")]),t._v(" SpringBoot集成数据迁移(Liquibase,Flyway)")]),t._v(" "),r("p",[t._v("aa")]),t._v(" "),r("h2",{attrs:{id:"springboot集成postgresql-jpa-mybatis-plus-json"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成postgresql-jpa-mybatis-plus-json"}},[t._v("#")]),t._v(" SpringBoot集成PostgreSQL(JPA,MyBatis-Plus,Json)")]),t._v(" "),r("p",[t._v("aa")]),t._v(" "),r("h2",{attrs:{id:"springboot集成redis-jedis-luttue-redission"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成redis-jedis-luttue-redission"}},[t._v("#")]),t._v(" SpringBoot集成Redis(Jedis,Luttue,Redission)")]),t._v(" "),r("p",[t._v("aa")]),t._v(" "),r("h2",{attrs:{id:"springboot集成其它nosql数据库-mongodb-elasticsearch-noe4j"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成其它nosql数据库-mongodb-elasticsearch-noe4j"}},[t._v("#")]),t._v(" SpringBoot集成其它NoSQL数据库(MongoDB,ElasticSearch,Noe4J)")]),t._v(" "),r("p",[t._v("aa")]),t._v(" "),r("h2",{attrs:{id:"springboot集成websocket-socket-netty"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成websocket-socket-netty"}},[t._v("#")]),t._v(" SpringBoot集成Websocket(socket,netty)")]),t._v(" "),r("p",[t._v("aa")]),t._v(" "),r("h2",{attrs:{id:"springboot集成定时任务-springtask-quartz-elastic-job-xxl-job"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成定时任务-springtask-quartz-elastic-job-xxl-job"}},[t._v("#")]),t._v(" SpringBoot集成定时任务(springtask,quartz,elastic-job,xxl-job)")]),t._v(" "),r("h2",{attrs:{id:"springboot集成视图解析-thymeleaf-freemarker-velocity-jsp-vuejs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成视图解析-thymeleaf-freemarker-velocity-jsp-vuejs"}},[t._v("#")]),t._v(" SpringBoot集成视图解析(Thymeleaf,FreeMarker,Velocity,JSP,VueJS)")]),t._v(" "),r("h2",{attrs:{id:"springboot集成缓存-caffeine-ehcache-couchbase"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成缓存-caffeine-ehcache-couchbase"}},[t._v("#")]),t._v(" SpringBoot集成缓存(Caffeine,EhCache,CouchBase)")]),t._v(" "),r("h2",{attrs:{id:"springboot集成认证授权-springsecurity-shiro-oauth2-sa-token-keycloak"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成认证授权-springsecurity-shiro-oauth2-sa-token-keycloak"}},[t._v("#")]),t._v(" SpringBoot集成认证授权(SpringSecurity,Shiro,Oauth2,SA-Token,Keycloak)")]),t._v(" "),r("h2",{attrs:{id:"springboot集成文档操作-上传-pdf-excel-word"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成文档操作-上传-pdf-excel-word"}},[t._v("#")]),t._v(" SpringBoot集成文档操作(上传,PDF,Excel,Word)")]),t._v(" "),r("h2",{attrs:{id:"springboot集成消息队列-activemq-rabbitmq-zeromq-kafka"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成消息队列-activemq-rabbitmq-zeromq-kafka"}},[t._v("#")]),t._v(" SpringBoot集成消息队列(ActiveMQ,RabbitMQ,ZeroMQ,Kafka)")]),t._v(" "),r("h2",{attrs:{id:"springboot集成通知-email-短信-钉钉-微信"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成通知-email-短信-钉钉-微信"}},[t._v("#")]),t._v(" SpringBoot集成通知(Email,短信,钉钉,微信)")]),t._v(" "),r("h2",{attrs:{id:"springboot集成文件系统-minio-aliyun-tencentcloud-fastdfs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成文件系统-minio-aliyun-tencentcloud-fastdfs"}},[t._v("#")]),t._v(" SpringBoot集成文件系统(minIO,aliyun,tencentCloud,FastDFS)")]),t._v(" "),r("h2",{attrs:{id:"springboot集成工作流引擎-activi-jbpm-flowable"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成工作流引擎-activi-jbpm-flowable"}},[t._v("#")]),t._v(" SpringBoot集成工作流引擎(activi,jBPM,flowable)")]),t._v(" "),r("h2",{attrs:{id:"springboot集成其它功能-支付-opc-ua-javafx2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成其它功能-支付-opc-ua-javafx2"}},[t._v("#")]),t._v(" SpringBoot集成其它功能(支付,OPC-UA,JavaFX2)")]),t._v(" "),r("h2",{attrs:{id:"springboot应用部署-jar-war-linux-docker-docker-compose"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot应用部署-jar-war-linux-docker-docker-compose"}},[t._v("#")]),t._v(" SpringBoot应用部署(jar,war,linux,docker,docker-compose)")]),t._v(" "),r("h2",{attrs:{id:"springboot集成监控-acturator-springboot-admin-elk-grafana-apm"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成监控-acturator-springboot-admin-elk-grafana-apm"}},[t._v("#")]),t._v(" SpringBoot集成监控(acturator,springboot-admin,ELK,Grafana,APM)")]),t._v(" "),r("h2",{attrs:{id:"springboot进阶-starter-自动装配原理-各类机制等"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot进阶-starter-自动装配原理-各类机制等"}},[t._v("#")]),t._v(" SpringBoot进阶(starter,自动装配原理,各类机制等)")])])}),[],!1,null,null,null);r.default=i.exports}}]);